package pdss5.hs.hdw;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;

public class DateConfirm {

    public static void main(String[] args) {
        System.out.println(new Date().toGMTString());
        System.out.println(new Date().getTimezoneOffset());

        java.util.TimeZone tz = java.util.TimeZone.getDefault();
        System.out.println("Timezone offset from UTC reported as " +
                (tz.getRawOffset() / 1000 / 60) + " minutes");
        if (tz.getRawOffset() % (15 * 60 * 1000) != 0) {
            System.out.println("Warning: not a multiple of quarter-hours");
        }
        System.out.println(new java.util.Date());
        System.out.println(tz);

        TimeZone tz2;
        Date date = new Date();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss (z Z)");

        tz2 = TimeZone.getTimeZone("Asia/Seoul");
        df.setTimeZone(tz2);
        System.out.format("%s%n%s%n%n", tz2.getDisplayName(), df.format(date));
        
        Date time = new Date();
    	System.out.println("time:"+time);
    	
    	String dateFormat = "yyyyMMdd'T'HHmmss.SSSZ";
    	SimpleDateFormat df1 = new SimpleDateFormat(dateFormat, Locale.KOREA);
    	System.out.println("KOREA:"+df1.format(time));
    	
    	SimpleDateFormat sdf4 = new SimpleDateFormat ( dateFormat, Locale.US );
    	System.out.println("US:"+sdf4.format(time));

    	SimpleDateFormat sdf5 = new SimpleDateFormat ( dateFormat );
    	sdf5.setTimeZone ( TimeZone.getTimeZone ( "America/Los_Angeles" ) );
    	System.out.println("America/Los_Angeles:"+sdf5.format(time));
    	
    	SimpleDateFormat sdf6 = new SimpleDateFormat ( dateFormat );
    	sdf6.setTimeZone ( TimeZone.getTimeZone ( "Asia/Seoul" ) );
    	System.out.println("Asia/Seoul:"+sdf6.format(time));
    }

}